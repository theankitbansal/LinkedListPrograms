
//Program to Deleting a node into the circular linked list

#include <iostream>

using namespace std;

struct Node{
    int data;
    struct Node *next;
}*Head;

void create(int A[], int n){
    int i;
    struct Node *t, *last;
    Head=new Node;
    Head->data=A[0];
    Head->next=Head;
    
    last=Head;
    for(i=1; i<n; i++){
        t=new Node;
        t->data=A[i];
        t->next=last->next;
        last->next=t;
        last=t;
    }
}

void Display(struct Node *h){
    do{
        cout<<h->data<<" ";
        h=h->next;
    }while(h!=Head);
    cout<<endl;
}

void RDisplay(struct Node *h){
    static int flag=0;
    if(h!=Head || flag==0){
        flag=1;
        cout<<h->data<<" ";
        RDisplay(h->next);
    }
    flag=0;
}

void Insert(struct Node *p, int index, int x){
    struct Node *t;
    int i;
    if(index==0){
        t=new Node;
        t->data=x;
        if(Head==NULL){
            Head=t;
            Head->next=Head;
        }else{
            while(p->next!=NULL) p=p->next;
            p->next=t;
            t->next=Head;
            Head=t;
        }
    }
    
    else{
        for(i=0; i<index-1; i++)   p=p->next;
        t=new Node;
        t->data=x;
        t->next=p->next;
        p->next=t;
    }
}

int Delete(struct Node *h, int index){
    struct Node *p, *q;
    int x;
    if(index==1){
        p=Head;
        while(p->next!=Head)  p=p->next;
        
        x=Head->data;
        if(Head==p){
            delete Head;
        }
        else{
            p->next=Head->next;
            delete Head;
            Head=p->next;
        }
    }else{
        p=Head;
        for(int i=0; i<index-2; i++)    p=p->next;
        q=p->next;
        p->next=q->next;
        x=q->data;
        delete q;
    }
    return x;
}

int main()
{
    int A[]={2,3,4,5,6};
    create(A,5);
    
    Insert(Head, 2, 10);
    
  Delete(Head, 2);
    
    RDisplay(Head);
    return 0;
}
