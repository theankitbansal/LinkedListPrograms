
//Program to check whether the linked list is in loop or linear
#include <bits/stdc++.h>

using namespace std;

struct Node{
    int data;
    struct Node *next;
}*first=NULL, *second=NULL, *third=NULL;

void create(int A[], int n){
    struct Node *t, *last;
    first =new Node;
    first->data=A[0];
    first->next=NULL;
    last=first;
    for(int i=1; i<n; i++){
        t=new Node;
        t->data=A[i];
        t->next=NULL;
        last->next=t;
        last=t;
    }
}


void create2(int A[], int n){
    struct Node *t, *last;
    second =new Node;
    second->data=A[0];
    second->next=NULL;
    last=second;
    for(int i=1; i<n; i++){
        t=new Node;
        t->data=A[i];
        t->next=NULL;
        last->next=t;
        last=t;
    }
}

void Display(struct Node *p){
    if(p!=NULL){
        cout<<p->data<<endl;
        Display(p->next);
    }
}

int count(struct Node *p){
    int count=0;
    while(p!=NULL){
        count++;
        p=p->next;
    }
    return(count);
}

void concat(struct Node *p, struct Node *q){
    third=p;
    while(p->next!=NULL){
        p=p->next;
    }
    p->next=q;
}


void Merge(struct Node *p, struct Node *q){
    struct Node *last;
    if(p->data<q->data){
        third=last=p;
        p=p->next;
        last->next=NULL;
    }else{
        third=last=q;
        q=q->next;
        last->next=NULL;
    }
    
    while(p!=NULL && q!=NULL){
        if(p->data<q->data){
            last->next=p;
            last=p;
            p=p->next;
            last->next=NULL;
        }else{
            last->next=q;
            last=q;
            q=q->next;
            last->next=NULL;
        }
    }
    if(p!=NULL){
        last->next=p;
    }else{
        last->next=q;
    }
}

bool isLoop(struct Node *p){
    if(p==NULL || p->next==NULL){
        return false;
    }
    struct Node *q=p;
    struct Node *r=p;
    
    while(r && r->next){
        q=q->next;
        r=r->next->next;
        if(q==r)    return true;
    }
    return false;
}


int main()
{
    struct Node *t1,*t2;
    int A[]={10,20,30,40,50};
    create(A,5);
    t1=first->next->next;
    t2=first->next->next->next->next;
    t2->next=t1;
    
    if(isLoop(first)){
        cout<<"Linked list is in Loop";
    }else{
        cout<<"Linked list is linear";
    }
    
    return 0;
}
